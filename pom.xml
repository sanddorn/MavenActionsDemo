<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ pom.xml
  ~
  ~ Created on 2017-07-16
  ~
  ~ Copyright (C) 2017 Nils Bokermann, All rights reserved.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.bermuda</groupId>
    <artifactId>action-test</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <distributionManagement>
        <repository>
            <id>bermuda-release</id>
            <url>http://development.bermuda.de/nexus/repository/maven-releases</url>
        </repository>
        <snapshotRepository>
            <id>bermuda-snapshot</id>
            <url>http://development.bermuda.de/nexus/repository/maven-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <postgresql.version>42.1.4</postgresql.version>
        <spring-boot-dependencies.version>1.5.12.RELEASE</spring-boot-dependencies.version>
        <lombok.version>1.16.18</lombok.version>
        <spring-cloud-zookeeper-dependencies.version>1.1.2.RELEASE</spring-cloud-zookeeper-dependencies.version>
        <commons-codec.version>1.10</commons-codec.version>
        <spring-cloud-dependencies.version>Dalston.RELEASE</spring-cloud-dependencies.version>
        <assertj-core.version>3.8.0</assertj-core.version>
        <powermock-module-junit4.version>${powermock-api-mockito.version}</powermock-module-junit4.version>
        <powermock-api-mockito.version>1.7.1</powermock-api-mockito.version>
        <checkstyle.version>2.17</checkstyle.version>
        <checkstyleSubPath>/config/checkstyle</checkstyleSubPath>
        <checkstyleDir>${project.rootdir}${checkstyleSubPath}</checkstyleDir>
        <project.rootdir>.</project.rootdir>
        <swagger2.version>2.8.0</swagger2.version>
        <flyway-core.version>4.2.0</flyway-core.version>
        <snyk.apiToken>09a51fa3-a111-4dd7-975d-5c8368f5c8f4</snyk.apiToken>
        <ecs.apiKey>d4d972d9-6eb7-4a7e-b4a2-d7140e44852d</ecs.apiKey>
        <snyk.failOnSeverity>medium</snyk.failOnSeverity>
        <asciidoctorj.pdf.version>1.5.0-alpha.16</asciidoctorj.pdf.version>
        <asciidoctorj.version>1.5.6</asciidoctorj.version>
        <jruby.version>1.7.26</jruby.version>
        <sonar-maven-plugin.version>3.3.0.603</sonar-maven-plugin.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- vulnerability: https://snyk.io/vuln/SNYK-JAVA-CHQOSLOGBACK-31407
                 fixed in 1.2.0+ -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>1.2.0</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.2.0</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>0.9.0</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-databind</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Vulerabilty: https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-32043
                 Fixed in 2.8.11 -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>2.8.11.1</version>
            </dependency>
            <!--   <dependency>
                   <groupId>com.netflix.hystrix</groupId>
                   <artifactId>hystrix-core</artifactId>
                   <version>1.5.11</version>
               </dependency>-->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-zookeeper-dependencies</artifactId>
                <version>${spring-cloud-zookeeper-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway-core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger2.version}</version>
                <scope>compile</scope>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- fix for io.springfox.springfox-swagger2 -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>25.0-jre</version>
            </dependency>
            <!-- end Fix -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger2.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock-api-mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock-api-mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot-dependencies.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>
                <plugin>
                    <groupId>org.flywaydb</groupId>
                    <artifactId>flyway-maven-plugin</artifactId>
                    <version>${flyway-core.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.asciidoctor</groupId>
                    <artifactId>asciidoctor-maven-plugin</artifactId>
                    <version>1.5.6</version>
                    <configuration>
                        <requires>
                            <require>asciidoctor-diagram</require>
                        </requires>
                        <sourceDirectory>src/site/asciidoc</sourceDirectory>
                        <attributes>
                            <sectnums>true</sectnums>
                            <imagesDir>${project.basedir}/target/generated-docs</imagesDir>
                            <!--<plantUMLDir>${project.basedir}/target/generated-docs/images/</plantUMLDir>-->
                            <graphvizdot>/usr/local/bin/dot</graphvizdot>
                        </attributes>
                        <backend>html</backend>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.asciidoctor</groupId>
                            <artifactId>asciidoctorj-pdf</artifactId>
                            <version>${asciidoctorj.pdf.version}</version>
                        </dependency>
                        <!-- Comment this section to use the default jruby artifact provided by the plugin -->
                        <dependency>
                            <groupId>org.jruby</groupId>
                            <artifactId>jruby-complete</artifactId>
                            <version>${jruby.version}</version>
                        </dependency>
                        <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
                        <dependency>
                            <groupId>org.asciidoctor</groupId>
                            <artifactId>asciidoctorj</artifactId>
                            <version>${asciidoctorj.version}</version>
                        </dependency>
                        <!-- https://mvnrepository.com/artifact/org.asciidoctor/asciidoctorj-diagram -->
                        <dependency>
                            <groupId>org.asciidoctor</groupId>
                            <artifactId>asciidoctorj-diagram</artifactId>
                            <version>1.5.8</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <!-- sollte lt. Doku unbedingt gesettzt werden -->
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <debug>true</debug>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <runOrder>random</runOrder>
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <argLine>${surefireArgLine}</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
                <configuration>

                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.2</version>
                <executions>
                    <!--
                        Prepares the property pointing to the JaCoCo runtime agent which
                        is passed as VM argument when Maven the Surefire plugin is executed.
                    -->
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${project.build.directory}/jacoco.exec</destFile>
                            <!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!--
                        Ensures that the code coverage report for unit tests is created after
                        unit tests have been run.
                    -->
                    <execution>
                        <id>post-unit-test</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>de.eacg</groupId>
                <artifactId>ecs-mvn-plugin</artifactId>
                <version>0.1.4</version>
                <configuration>
                    <apiKey>${ecs.apiKey}</apiKey>
                    <userName>nils.bokermann+ecs@bermuda.de</userName>
                    <projectName>RadiusServiceFrontend</projectName>
                    <skipTransfer>true</skipTransfer>
                    <skip>true</skip>
                    <!-- disabled until module handling will work. 0.1.4 is buggy,
                    further development seems to be finished...-->
                </configuration>
                <executions>
                    <execution>
                        <id>dependency-scan</id>
                        <goals>
                            <goal>dependency-scan</goal>
                        </goals>
                        <phase>install</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.snyk</groupId>
                <artifactId>snyk-maven-plugin</artifactId>
                <version>1.1.1</version>
                <configuration>
                    <apiToken>${snyk.apiToken}</apiToken>
                    <failOnSeverity>${snyk.failOnSeverity}</failOnSeverity>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.ekryd.sortpom</groupId>
                <artifactId>sortpom-maven-plugin</artifactId>
                <version>2.10.0</version>
                <configuration>
                    <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
                    <lineSeparator>\n</lineSeparator>
                    <encoding>UTF-8</encoding>
                    <keepBlankLines>true</keepBlankLines>
                    <createBackupFile>false</createBackupFile>
                    <nrOfIndentSpace>4</nrOfIndentSpace>
                    <verifyFail>Stop</verifyFail>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>sort</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.amashchenko.maven.plugin</groupId>
                <artifactId>gitflow-maven-plugin</artifactId>
                <version>1.9.0</version>
                <configuration>
                    <gitFlowConfig>
                        <productionBranch>master</productionBranch>
                        <developmentBranch>development</developmentBranch>
                        <featureBranchPrefix>feature/</featureBranchPrefix>
                        <releaseBranchPrefix>release/</releaseBranchPrefix>
                        <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
                        <supportBranchPrefix>support/</supportBranchPrefix>
                        <versionTagPrefix></versionTagPrefix>
                        <origin>origin</origin>
                    </gitFlowConfig>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>output-pdf</id>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <baseDir>src/site/asciidoc</baseDir>
                            <backend>pdf</backend>
                        </configuration>
                    </execution>
                    <execution>
                        <id>output-html</id>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <baseDir>src/site/asciidoc</baseDir>
                            <backend>html</backend>
                            <relativeBaseDir>true</relativeBaseDir>
                            <attributes>
                                <!--<plantUMLDir>${project.basedir}/target/generated-docs/images/</plantUMLDir>-->
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <!-- select non-aggregate reports -->
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

</project>
